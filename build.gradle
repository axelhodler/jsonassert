apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'maven-publish'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        if (!version.contains('SNAPSHOT')) {
            classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:+'
            classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3"
        }
    }
}


group = 'com.blogspot.toomuchcoding'
version = '0.0.1-SNAPSHOT'
description = "JSON Path assertion library"

sourceCompatibility = 1.7

repositories {
    jcenter()
}

dependencies {
    compile "com.jayway.jsonpath:json-path:2.0.0"
    compile "org.codehaus.groovy:groovy-all:2.4.5"

    testCompile "org.spockframework:spock-core:1.0-groovy-2.4"
    testCompile 'cglib:cglib-nodep:3.1'
    testCompile 'org.objenesis:objenesis:2.1'
}

test {
    maxParallelForks = Runtime.runtime.availableProcessors() / 2
}

publishing {
    publications {
        code(MavenPublication) {
            from components.java
            pom.withXml {
                //#89 - workaround to not to have only runtime dependencies in generated pom.xml
                //Known limitation in maven-publish - - http://forums.gradle.org/gradle/topics/maven_publish_plugin_generated_pom_making_dependency_scope_runtime#reply_14120711
                asNode().dependencies.'*'.findAll() {
                    it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                        dep.name == it.artifactId.text()
                    }
                }.each() {
                    it.scope*.value = 'compile'
                }
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.11'
}

if (!version.contains('SNAPSHOT')) {
    apply from: "$rootDir/gradle/release.gradle"
}

